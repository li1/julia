agents:
  queue: "julia"
  # Only run on `sandbox.jl` machines (not `docker`-isolated ones) since we need nestable sandboxing
  sandbox.jl: "true"
  os: "linux"

steps:
  - label: "tester_linux$ARCH_LABEL"
    key: tester_linux$ARCH_LABEL
    depends_on: package_linux$ARCH
    plugins:
      - JuliaCI/julia#v1:
          # Drop default "registries" directory, so it is not persisted from execution to execution
          persist_depot_dirs: packages,artifacts,compiled
          version: 1.6
      - staticfloat/sandbox#v1:
          rootfs_url: https://github.com/JuliaCI/rootfs-images/releases/download/$ROOTFS_TAG/package_linux.${ROOTFS_ARCH}.tar.gz
          rootfs_treehash: "$ROOTFS_TREE"
          uid: 1000
          gid: 1000
          workspaces:
            # Include `/cache/repos` so that our `git` version introspection works.
            - "/cache/repos:/cache/repos"
    env:
      JULIA_SHELL: "/bin/bash"
    timeout_in_minutes: $TIMEOUT
    notify:
      - github_commit_status:
          context: "tester_linux$ARCH_LABEL"
    commands: |
      echo "--- Print the full and short commit hashes"
      SHORT_COMMIT_LENGTH=10
      SHORT_COMMIT=`echo $$BUILDKITE_COMMIT | cut -c1-$$SHORT_COMMIT_LENGTH`
      JULIA_DIRECTORY_NAME="julia-$$SHORT_COMMIT"
      ARTIFACT_FILE_EXTENSION="tar.gz"
      ARTIFACT_FILENAME="julia-$$SHORT_COMMIT-linux$ARCH.$$ARTIFACT_FILE_EXTENSION"
      echo "The full commit is:                     $$BUILDKITE_COMMIT"
      echo "The short commit is:                    $$SHORT_COMMIT"
      echo "The artifact filename will be:    $$ARTIFACT_FILENAME"
      echo "The Julia directory name will be: $$JULIA_DIRECTORY_NAME"

      echo "--- Download build artifacts"
      rm -rf $$ARTIFACT_FILENAME
      buildkite-agent artifact download $$ARTIFACT_FILENAME .

      echo "--- Extract build artifacts"
      rm -rf $$JULIA_DIRECTORY_NAME/
      tar xzf $$ARTIFACT_FILENAME $$JULIA_DIRECTORY_NAME/

      echo "--- Print Julia version info"
      $$JULIA_DIRECTORY_NAME/bin/julia -e 'using InteractiveUtils; InteractiveUtils.versioninfo()'

      echo "--- Run the Julia test suite"
      unset JULIA_DEPOT_PATH
      # TODO: do not skip any test sets
      if [[ "$$BUILDKITE_STEP_KEY" != "tester_linux64_rr" ]]; then $$JULIA_DIRECTORY_NAME/bin/julia .buildkite/utilities/rr/buildkite.jl $$JULIA_DIRECTORY_NAME/bin/julia -e 'Base.runtests(["all", "--skip", "Profile"]; ncores = Sys.CPU_THREADS)'; fi
      if [[ "$$BUILDKITE_STEP_KEY" == "tester_linux64_rr" ]]; then $$JULIA_DIRECTORY_NAME/bin/julia .buildkite/utilities/rr/buildkite.jl $$JULIA_DIRECTORY_NAME/bin/julia -e 'Base.runtests(["cmdlineargs"]; ncores = Sys.CPU_THREADS)'; fi
